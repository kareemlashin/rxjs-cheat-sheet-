@import '../../styles/_variables.scss';
@import '../../styles/_mixins.scss';

$red:#FF0000;

h1{
    color:$red;
} 
//========nesting
.left-sidebar-links{
    a{
        display: block;
        color:$red;
       
    }
     & :hover{
            color:black;
        }
}

.left-sidebar-links{
    border-bottom: 2px solid orange;
   
}
//=========Extend/Inheritance
#riddle{
    padding: 20px;
    margin-top:10px;
    color:$midnight-blue;
    font-weight: bolder;
    font-size:20px;
}
#riddle-answer{
    @extend #riddle;
    color:purple;
}
//we can create abstract style set and make other elements use it



%dashed-box{
    border : 2px dashed;
    margin :10px;
    @include border-radius(40px);//with mixin

}
#riddle{
    @extend %dashed-box;
}
%dotted-box{
    border : 2px dotted;
    margin :10px;
}
#riddle2{
     @extend %dotted-box;
}

#riddle2{
    border-color: lighten(brown,70%)
}


//======== if and for loop
$riddle-color:blue;
@if $riddle-color == blue {
  #riddle {
    background-color: green;
  }
} @else {
  #riddle {
    background-color: orangered;
  }
}
 
// We can use for loops to change as we iterate
 
$prct-yellow: 5%;
 
@for $i from 1 through 14 {
  #vert-nav ul li:nth-child(#{$i}){
    background-color: mix(yellow, white, $prct-yellow);
  }
 
  $prct-yellow: $prct-yellow + 5%
}